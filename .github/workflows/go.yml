# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-docker-push-job:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:18-alpine
        env:
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
          POSTGRES_DB: tests
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
    
    - name: Setup Go 1.25.x
      uses: actions/setup-go@v4
      with:
        go-version: '1.25.x'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

      env:
        DBHOST: localhost
        DBUSER: $POSTGRES_USER
        DBPORT: 5432
        DBPASS: $POSTGRES_PASSWORD
        DBNAME: tests
    
    - name: Login to docker
      uses: docker/login-action@v3
      with:
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and Push to docker hub
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: |
          arupjana/tasks-api:latest
          arupjana/tasks-api:1.0.0
